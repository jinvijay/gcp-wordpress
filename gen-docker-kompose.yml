apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    selector:
      io.kompose.service: phpmyadmin
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: wordpress
    name: wordpress
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "443"
      port: 443
      targetPort: 443
    selector:
      io.kompose.service: wordpress
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: admin123
          image: db
          name: jin-wp-db
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: db-data
        restartPolicy: Always
        volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: db-data
    name: db-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: phpmyadmin
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: admin123
          - name: PMA_HOST
            value: db
          image: phpmyadmin
          name: jin-wp-phpmyadmin
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o gen-docker-kompose.yml
      kompose.version: 1.8.0 (0c0c027)
    creationTimestamp: null
    labels:
      io.kompose.service: wordpress
    name: wordpress
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: wordpress
      spec:
        containers:
        - env:
          - name: WORDPRESS_DB_HOST
            value: db:3306
          - name: WORDPRESS_DB_PASSWORD
            value: admin123
          image: wordpress
          name: jin-wp
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
          volumeMounts:
          - mountPath: /var/www/html/wp-content
            name: wordpress-claim0
        restartPolicy: Always
        volumes:
        - name: wordpress-claim0
          persistentVolumeClaim:
            claimName: wordpress-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: wordpress-claim0
    name: wordpress-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

